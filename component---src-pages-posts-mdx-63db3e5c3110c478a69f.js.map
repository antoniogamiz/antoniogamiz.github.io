{"version":3,"sources":["webpack:///./src/pages/posts.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","SourceList","Flex","Box","Link","Card","Text","Heading","Badge","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","filter","posts","sx","flexWrap","ml","theme","space","mr","map","edge","index","node","frontmatter","title","date","tags","slug","fields","key","mb","maxWidth","width","href","textDecoration","p","fontSize","color","format","Date","variant","tag","count","percent","mix","length","borderColor","isMDXComponent"],"mappings":"6TASO,IAAMA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAaL,EAAc,cAC3BM,EAAON,EAAc,QACrBO,EAAMP,EAAc,OACpBQ,EAAOR,EAAc,QACrBS,EAAOT,EAAc,QACrBU,EAAOV,EAAc,QACrBW,EAAUX,EAAc,WACxBY,EAAQZ,EAAc,SACtBa,EAAc,CAClBd,gBAEIe,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGf,E,oIACF,mBACD,OAAO,YAACY,EAAD,iBAAeD,EAAiBX,EAAhC,CAAuCe,WAAYA,EAAYC,QAAQ,cAI5E,+BACA,YAACb,EAAD,CAAYc,OAAO,QAAQD,QAAQ,eACpC,SAAAE,GAAK,OAAI,YAACd,EAAD,CAAMe,GAAI,CACdC,SAAU,OACVC,GAAI,SAAAC,GAAK,UAAQA,EAAMC,MAAM,GAApB,MACTC,GAAI,SAAAF,GAAK,UAAQA,EAAMC,MAAM,GAApB,OACRP,QAAQ,QACVE,EAAMO,KAAI,SAACC,EAAMC,GAAU,MAUpBD,EAAKE,KAVe,IAEtBC,YACEC,EAHoB,EAGpBA,MACAC,EAJoB,EAIpBA,KACAC,EALoB,EAKpBA,KAGAC,EARoB,EAOtBC,OACED,KAGJ,OAAO,YAAC5B,EAAD,CAAK8B,IAAKR,EAAOR,GAAI,CAC1BiB,GAAI,EACJC,SAAU,CAAC,OAAQ,OACnBC,MAAO,CAAC,OAAQ,QACftB,QAAQ,OACT,YAACV,EAAD,CAAMiC,KAAMN,EAAMd,GAAI,CACpBqB,eAAgB,QACfxB,QAAQ,QACT,YAACT,EAAD,CAAMY,GAAI,CACRE,GAAI,EACJG,GAAI,EACJiB,EAAG,GACFzB,QAAQ,QACT,YAACR,EAAD,CAAMW,GAAI,CACRuB,SAAU,EACVC,MAAO,SACN3B,QAAQ,QAAQ4B,YAAO,IAAIC,KAAKd,GAAO,YAC1C,YAACtB,EAAD,CAASqC,QAAQ,YAAY3B,GAAI,CAC/BwB,MAAO,QACN3B,QAAQ,WAAWc,GACrBE,EAAKP,KAAI,SAACsB,EAAKpB,GAKVoB,EAHFhD,KAGEgD,EAFFC,MAEED,EADFE,QAEF,OAAO,YAACvC,EAAD,CAAOyB,IAAKR,EAAOmB,QAAQ,UAAU3B,GAAI,CAC9CK,GAAI,EACJY,GAAI,EACJO,MAAOO,YAAI,UAAW,YAAZ,GAA4BvB,EAAQK,EAAKmB,QACnDC,YAAaF,YAAI,UAAW,YAAZ,GAA4BvB,EAAQK,EAAKmB,SACxDnC,QAAQ,SACN+B,MAGP,YAACvC,EAAD,CAAMW,GAAI,CACRqB,eAAgB,aACfxB,QAAQ,QAFX,uBASZ,YAAC,IAAD,CAAQA,QAAQ,YAKpBF,EAAWuC,gBAAiB","file":"component---src-pages-posts-mdx-63db3e5c3110c478a69f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/antonio/code/antoniogamiz.github.io/node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js\";\nimport { format } from 'date-fns';\nimport { mix } from '@theme-ui/color';\nimport Footer from '../components/footer';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst SourceList = makeShortcode(\"SourceList\");\nconst Flex = makeShortcode(\"Flex\");\nconst Box = makeShortcode(\"Box\");\nconst Link = makeShortcode(\"Link\");\nconst Card = makeShortcode(\"Card\");\nconst Text = makeShortcode(\"Text\");\nconst Heading = makeShortcode(\"Heading\");\nconst Badge = makeShortcode(\"Badge\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Posts`}</h1>\n    <SourceList filter='posts' mdxType=\"SourceList\">\n  {posts => <Flex sx={{\n        flexWrap: 'wrap',\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`\n      }} mdxType=\"Flex\">\n      {posts.map((edge, index) => {\n          const {\n            frontmatter: {\n              title,\n              date,\n              tags\n            },\n            fields: {\n              slug\n            }\n          } = edge.node;\n          return <Box key={index} sx={{\n            mb: 3,\n            maxWidth: ['100%', '50%'],\n            width: ['100%', '50%']\n          }} mdxType=\"Box\">\n            <Link href={slug} sx={{\n              textDecoration: 'none'\n            }} mdxType=\"Link\">\n              <Card sx={{\n                ml: 2,\n                mr: 2,\n                p: 3\n              }} mdxType=\"Card\"> \n                <Text sx={{\n                  fontSize: 0,\n                  color: 'muted'\n                }} mdxType=\"Text\">{format(new Date(date), 'd-MMM-u')}</Text>\n                <Heading variant='styles.h4' sx={{\n                  color: 'text'\n                }} mdxType=\"Heading\">{title}</Heading>\n                {tags.map((tag, index) => {\n                  const {\n                    name,\n                    count,\n                    percent\n                  } = tag;\n                  return <Badge key={index} variant='primary' sx={{\n                    mr: 2,\n                    mb: 2,\n                    color: mix('success', 'secondary', `${index / tags.length}`),\n                    borderColor: mix('success', 'secondary', `${index / tags.length}`)\n                  }} mdxType=\"Badge\">\n                      {tag}\n                    </Badge>;\n                })}\n                <Text sx={{\n                  textDecoration: 'underline'\n                }} mdxType=\"Text\">View post</Text>\n              </Card>\n            </Link>\n          </Box>;\n        })}\n    </Flex>}\n    </SourceList>\n    <Footer mdxType=\"Footer\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}