{"version":3,"sources":["webpack:///./src/pages/index.mdx"],"names":["favTechs","_frontmatter","makeShortcode","name","props","console","warn","Message","Text","Divider","Button","Grid","Box","Heading","Badge","SourceList","Flex","Link","Card","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","mb","as","mr","href","role","gap","columns","map","favTech","index","key","sx","color","mix","length","borderColor","filter","projects","flexWrap","ml","theme","space","splice","edge","node","frontmatter","title","date","tags","slug","fields","maxWidth","width","textDecoration","p","fontSize","format","Date","tag","count","percent","justifyContent","posts","isMDXComponent"],"mappings":"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","file":"component---src-pages-index-mdx-eaffa3487524ef6dd9d0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/antonio/code/antoniogamiz.github.io/node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js\";\nimport { format } from 'date-fns';\nimport { mix } from '@theme-ui/color';\nimport Footer from '../components/footer';\nimport Socials from '../components/socials';\nexport const favTechs = ['Node.js', 'Gatsby', 'JavaScript', 'HTML5', 'CSS3', 'C++', 'Make', 'MySQL', 'Raku'];\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Message = makeShortcode(\"Message\");\nconst Text = makeShortcode(\"Text\");\nconst Divider = makeShortcode(\"Divider\");\nconst Button = makeShortcode(\"Button\");\nconst Grid = makeShortcode(\"Grid\");\nconst Box = makeShortcode(\"Box\");\nconst Heading = makeShortcode(\"Heading\");\nconst Badge = makeShortcode(\"Badge\");\nconst SourceList = makeShortcode(\"SourceList\");\nconst Flex = makeShortcode(\"Flex\");\nconst Link = makeShortcode(\"Link\");\nconst Card = makeShortcode(\"Card\");\nconst layoutProps = {\n  favTechs,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1>{`helloWorld`}</h1>\n    <Message variant='success' mb={2} mdxType=\"Message\">\n  <Text variant='styles.h4' mdxType=\"Text\">Hey Everyone, my name is Antonio!</Text>\n I am currently pursuing a bachelor in Computer Science and another one in Mathematics. \n  <Divider mdxType=\"Divider\" />\n  <Button as='a' mr={2} href='documents/antonio.pdf' variant='primary' role='button' mdxType=\"Button\">ResumeüìÑ</Button>\n    </Message>\n    <Divider mdxType=\"Divider\" />\n    <Grid gap={2} columns={[1, '1fr 2fr']} mdxType=\"Grid\">\n  <Box mdxType=\"Box\">\n    <Heading variant='styles.h2' mdxType=\"Heading\">getInTouch</Heading>\n    <Socials mdxType=\"Socials\" />\n  </Box>\n  <Box mdxType=\"Box\">\n    <Heading variant='styles.h2' mdxType=\"Heading\">favoriteTech</Heading>\n    {favTechs.map((favTech, index) => {\n          return <Badge key={index} variant='primary' sx={{\n            mr: 2,\n            mb: 2,\n            color: mix('secondary', 'success', `${index / favTechs.length}`),\n            borderColor: mix('secondary', 'success', `${index / favTechs.length}`)\n          }} mdxType=\"Badge\">\n            {favTech}\n          </Badge>;\n        })}\n  </Box>\n    </Grid>\n    <Divider mdxType=\"Divider\" />\n    <Heading variant='styles.h2' mdxType=\"Heading\">fetchProjects</Heading>\n    <SourceList filter='projects' mdxType=\"SourceList\">\n  {projects => <Flex sx={{\n        flexWrap: 'wrap',\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`\n      }} mdxType=\"Flex\">\n      {projects.splice(0, 3).map((edge, index) => {\n          const {\n            frontmatter: {\n              title,\n              date,\n              tags\n            },\n            fields: {\n              slug\n            }\n          } = edge.node;\n          return <Box key={index} sx={{\n            mb: 3,\n            maxWidth: ['100%', '50%', '33.333%'],\n            width: ['100%', '50%', '33.333%']\n          }} mdxType=\"Box\">\n            <Link href={slug} sx={{\n              textDecoration: 'none'\n            }} mdxType=\"Link\">\n              <Card sx={{\n                ml: 2,\n                mr: 2,\n                p: 3\n              }} mdxType=\"Card\"> \n                <Text sx={{\n                  fontSize: 0,\n                  color: 'muted'\n                }} mdxType=\"Text\">{format(new Date(date), 'd-MMM-u')}</Text>\n                <Heading variant='styles.h4' sx={{\n                  color: 'text'\n                }} mdxType=\"Heading\">{title}</Heading>\n                {tags.map((tag, index) => {\n                  const {\n                    name,\n                    count,\n                    percent\n                  } = tag;\n                  return <Badge key={index} variant='primary' sx={{\n                    mr: 2,\n                    mb: 2,\n                    color: mix('success', 'secondary', `${index / tags.length}`),\n                    borderColor: mix('success', 'secondary', `${index / tags.length}`)\n                  }} mdxType=\"Badge\">\n                      {tag}\n                    </Badge>;\n                })}\n                <Text sx={{\n                  textDecoration: 'underline'\n                }} mdxType=\"Text\">View project</Text>\n              </Card>\n            </Link>\n          </Box>;\n        })}\n    </Flex>}\n    </SourceList>\n    <Flex sx={{\n      justifyContent: 'center'\n    }} mdxType=\"Flex\">\n  <Button as='a' mr={2} href='/projects' variant='primary' mdxType=\"Button\">Show me more!! üë®‚Äçüíªüë©‚Äçüíª</Button>\n    </Flex>\n    <Divider mdxType=\"Divider\" />\n    <Heading variant='styles.h2' mdxType=\"Heading\">fetchRecentPosts</Heading>\n    <SourceList filter='posts' mdxType=\"SourceList\">\n  {posts => <Flex sx={{\n        flexWrap: 'wrap',\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`\n      }} mdxType=\"Flex\">\n      {posts.splice(0, 4).map((edge, index) => {\n          const {\n            frontmatter: {\n              title,\n              date,\n              tags\n            },\n            fields: {\n              slug\n            }\n          } = edge.node;\n          return <Box key={index} sx={{\n            mb: 3,\n            maxWidth: ['100%', '50%'],\n            width: ['100%', '50%']\n          }} mdxType=\"Box\">\n            <Link href={slug} sx={{\n              textDecoration: 'none'\n            }} mdxType=\"Link\">\n              <Card sx={{\n                ml: 2,\n                mr: 2,\n                p: 3\n              }} mdxType=\"Card\"> \n                <Text sx={{\n                  fontSize: 0,\n                  color: 'muted'\n                }} mdxType=\"Text\">{format(new Date(date), 'd-MMM-u')}</Text>\n                <Heading variant='styles.h4' sx={{\n                  color: 'text'\n                }} mdxType=\"Heading\">{title}</Heading>\n                {tags.map((tag, index) => {\n                  const {\n                    name,\n                    count,\n                    percent\n                  } = tag;\n                  return <Badge key={index} variant='primary' sx={{\n                    mr: 2,\n                    mb: 2,\n                    color: mix('success', 'secondary', `${index / tags.length}`),\n                    borderColor: mix('success', 'secondary', `${index / tags.length}`)\n                  }} mdxType=\"Badge\">\n                      {tag}\n                    </Badge>;\n                })}\n                <Text sx={{\n                  textDecoration: 'underline'\n                }} mdxType=\"Text\">View post</Text>\n              </Card>\n            </Link>\n          </Box>;\n        })}\n    </Flex>}\n    </SourceList>\n    <Flex sx={{\n      justifyContent: 'center'\n    }} mdxType=\"Flex\">\n  <Button as='a' mr={2} href='/posts' variant='primary' mdxType=\"Button\">Read more üìë</Button>\n    </Flex>\n    <Divider mdxType=\"Divider\" />\n    <Footer mdxType=\"Footer\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}